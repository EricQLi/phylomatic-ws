#!/usr/bin/gawk -f

## Webservice for phylomatic 

## This program is free software; you can redistribute it and/or
## modify it under the terms of the BSD 2-Clause License:
## http://www.opensource.org/licenses/bsd-license.php
## Copyright (c) 2012, Campbell Webb <cwebb@oeb.harvard.edu>

BEGIN{

  ORS = "";

  # For GET;  
  split(ENVIRON["QUERY_STRING"],query,"&");
  for (i in query)
	{
	  split(query[i],tmpquery,"=");
	  f[tmpquery[1]] = decode(substr(tmpquery[2], 1, 5000)); 
	}
  

  # test for phylomatic in path
  RS = "\n";
  "which phylomatic" | getline app;
  if (app !~ /phylomatic/)  { PM = "~/bin/phylomatic" } 
  else {PM = "phylomatic"}
  
  print "Content-type: text/plain\n\n";
  
  system(PM " -h");

  exit;
}


# decode urlencoded string
function decode(text,   hex, i, hextab, decoded, len, c, c1, c2, code) {
	
  split("0 1 2 3 4 5 6 7 8 9 a b c d e f", hex, " ")
  for (i=0; i<16; i++) hextab[hex[i+1]] = i
  
  # urldecode function from Heiner Steven
  # http://www.shelldorado.com/scripts/cmds/urldecode

  # decode %xx to ASCII char 
  decoded = ""
  i = 1
  len = length(text)
  
  while ( i <= len ) {
    c = substr (text, i, 1)
    if ( c == "%" ) {
      if ( i+2 <= len ) {
	c1 = tolower(substr(text, i+1, 1))
	c2 = tolower(substr(text, i+2, 1))
	if ( hextab [c1] != "" || hextab [c2] != "" ) {
	  # print "Read: %" c1 c2;
	  # Allow: 
	  # 20 begins main chars, but dissallow 7F (wrong in orig code!)
	       # tab, newline, formfeed, carriage return
	  if ( ( (c1 >= 2) && ((c1 c2) != "7f") )  \
	       || (c1 == 0 && c2 ~ "[9acd]") )
	  {
	    code = 0 + hextab [c1] * 16 + hextab [c2] + 0
	    # print "Code: " code
	    c = sprintf ("%c", code)
	  } else {
	    # for dissallowed chars
	    c = " "
	  }
	  i = i + 2
	}
      }
    } else if ( c == "+" ) {	# special handling: "+" means " "
      c = " "
    }
    decoded = decoded c
    ++i
  }
  
  # change linebreaks to \n
  gsub(/\r\n/, "\n", decoded);
  
  # remove last linebreak
  sub(/[\n\r]*$/,"",decoded);
  
  return decoded
}

